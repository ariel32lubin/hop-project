{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signInWithRedirect } from \"firebase/auth\";\nimport { Route } from \"react-router-dom\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqS_gKkZJIlW4KUdW0x3XFvNBgZuhuQsw\",\n  authDomain: \"react-template-c8bf7.firebaseapp.com\",\n  projectId: \"react-template-c8bf7\",\n  storageBucket: \"react-template-c8bf7.appspot.com\",\n  messagingSenderId: \"327870582787\",\n  appId: \"1:327870582787:web:550f9d61cb735e371efe36\"\n};\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\nexport default async function signInWithGoogle() {\n  await signInWithPopup(auth, provider).then(async result => {\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    const user = result.user;\n    sessionStorage.setItem(\"uid\", user.uid);\n    const [username, displayName] = [user.displayName, user.displayName]; // TODO create user in DB\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = GoogleAuthProvider.credentialFromError(error);\n  });\n}","map":{"version":3,"sources":["/Users/ariel32lubin/hop-project/src/services/firebase.js"],"names":["initializeApp","getFirestore","useNavigate","getAuth","signInWithPopup","GoogleAuthProvider","signInWithRedirect","Route","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","provider","auth","signInWithGoogle","then","result","credential","credentialFromResult","token","accessToken","user","sessionStorage","setItem","uid","username","displayName","catch","error","errorCode","code","errorMessage","message","email","credentialFromError"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SACEC,OADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,eALP;AAMA,SAASC,KAAT,QAAsB,kBAAtB;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,sCAFS;AAGrBC,EAAAA,SAAS,EAAE,sBAHU;AAIrBC,EAAAA,aAAa,EAAE,kCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AASA,OAAO,MAAMC,GAAG,GAAGf,aAAa,CAACQ,cAAD,CAAzB;AACP,OAAO,MAAMQ,EAAE,GAAGf,YAAY,CAACc,GAAD,CAAvB;AACP,MAAME,QAAQ,GAAG,IAAIZ,kBAAJ,EAAjB;AACA,MAAMa,IAAI,GAAGf,OAAO,EAApB;AAEA,eAAe,eAAegB,gBAAf,GAAkC;AAC/C,QAAMf,eAAe,CAACc,IAAD,EAAOD,QAAP,CAAf,CACHG,IADG,CACE,MAAOC,MAAP,IAAkB;AACtB,UAAMC,UAAU,GAAGjB,kBAAkB,CAACkB,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,UAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB;AACA,UAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8BF,IAAI,CAACG,GAAnC;AACA,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B,CAACL,IAAI,CAACK,WAAN,EAAmBL,IAAI,CAACK,WAAxB,CAAhC,CALsB,CAMtB;AACD,GARG,EASHC,KATG,CASIC,KAAD,IAAW;AAChB;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;AACA,UAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALgB,CAMhB;;AACA,UAAMhB,UAAU,GAAGjB,kBAAkB,CAACkC,mBAAnB,CAAuCN,KAAvC,CAAnB;AACD,GAjBG,CAAN;AAkBD","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signInWithRedirect,\n} from \"firebase/auth\";\nimport { Route } from \"react-router-dom\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqS_gKkZJIlW4KUdW0x3XFvNBgZuhuQsw\",\n  authDomain: \"react-template-c8bf7.firebaseapp.com\",\n  projectId: \"react-template-c8bf7\",\n  storageBucket: \"react-template-c8bf7.appspot.com\",\n  messagingSenderId: \"327870582787\",\n  appId: \"1:327870582787:web:550f9d61cb735e371efe36\",\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\n\nexport default async function signInWithGoogle() {\n  await signInWithPopup(auth, provider)\n    .then(async (result) => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      const user = result.user;\n      sessionStorage.setItem(\"uid\", user.uid);\n      const [username, displayName] = [user.displayName, user.displayName];\n      // TODO create user in DB\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}